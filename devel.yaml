version: "2.4"

services:

  odoo:
    extends:
      file: common.yaml
      service: odoo
    build:
      args:
        # To aggregate in development, use `setup-devel.yaml`
        AGGREGATE: "false"
        # Export these variables to own files created by odoo in your filesystem
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
        # No need for this in development
        PIP_INSTALL_ODOO: "false"
        CLEAN: "false"
        COMPILE: "false"
    networks: &public
      default:
      public:
    environment:
      DOODBA_ENVIRONMENT: "${DOODBA_ENVIRONMENT-devel}"
      LIST_DB: "true"
      DEBUGPY_ENABLE: "${DOODBA_DEBUGPY_ENABLE:-0}"
      PGDATABASE: &dbname horizon_test_16.0_2023_08_25_05_59
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONOPTIMIZE: ""
      PYTHONPATH: /opt/odoo/custom/src/odoo
      SMTP_PORT: "1025"
      WDB_WEB_PORT: "16984"
      # To avoid installing demo data export DOODBA_WITHOUT_DEMO=all
      WITHOUT_DEMO: "${DOODBA_WITHOUT_DEMO-false}"
    volumes:
      - ./odoo/data/:/opt/odoo/data/:ro,z
      - ./odoo/custom:/opt/odoo/custom:rw,z
      - ./odoo/auto:/opt/odoo/auto:rw,z
    depends_on:
      - db
      - proxy_cdnjs_cloudflare_com
      - proxy_fonts_googleapis_com
      - proxy_fonts_gstatic_com
      - proxy_www_google_com
      - proxy_www_googleapis_com
      - proxy_www_gravatar_com
      - smtp
    command:
      - odoo
      - --limit-memory-soft=0
      - --limit-time-real-cron=9999999
      - --limit-time-real=9999999
      - --workers=3
      - --dev=reload,xml
        #- -u all 
        #- --stop-after-init
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.horizon-acc.service=horizon-acc
      - traefik.http.routers.horizon-acc.rule=(Host(`horizon-acc.ito-invest.lu`))
      - traefik.http.routers.horizon-acc.tls=false
      - traefik.http.routers.horizon-acc.entrypoints=web
      #- traefik.http.routers.horizon-acc.tls.certresolver=letsencrypt
      - traefik.http.services.horizon-acc.loadbalancer.server.port=8069
      - traefik.http.routers.horizon-acc-lp.service=horizon-acc-lp
      - traefik.http.routers.horizon-acc-lp.rule=(Host(`horizon-acc.ito-invest.lu`) && (PathPrefix(`/websocket`)))
      - traefik.http.routers.horizon-acc-lp.tls=false
      - traefik.http.routers.horizon-acc-lp.entrypoints=web
      #- traefik.http.routers.horizon-acc-lp.tls.certresolver=letsencrypt
      - traefik.http.services.horizon-acc-lp.loadbalancer.server.port=8072

  db:
    extends:
      file: common.yaml
      service: db
    networks:
      default:
    environment:
      POSTGRES_DB: *dbname
      POSTGRES_PASSWORD: odoopassword

  pgweb:
    image: docker.io/sosedoff/pgweb
    ports:
      - "16081:8081"
    networks: *public
    environment:
      DATABASE_URL: postgres://odoo:odoopassword@db:5432/horizon_test_16.0_2023_08_25_05_59?sslmode=disable
    depends_on:
      - db

  smtp:
    extends:
      file: common.yaml
      service: smtpfake
    networks:
      default:
    ports:
      - "127.0.0.1:16025:8025"

  # Whitelist outgoing traffic for tests, reports, etc.
  proxy_cdnjs_cloudflare_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - cdnjs.cloudflare.com
      public:
    environment:
      TARGET: cdnjs.cloudflare.com
      PRE_RESOLVE: 1

  proxy_fonts_googleapis_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - fonts.googleapis.com
      public:
    environment:
      TARGET: fonts.googleapis.com
      PRE_RESOLVE: 1

  proxy_fonts_gstatic_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - fonts.gstatic.com
      public:
    environment:
      TARGET: fonts.gstatic.com
      PRE_RESOLVE: 1

  proxy_www_google_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - www.google.com
      public:
    environment:
      TARGET: www.google.com
      PRE_RESOLVE: 1

  proxy_www_googleapis_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - www.googleapis.com
      public:
    environment:
      TARGET: www.googleapis.com
      PRE_RESOLVE: 1

  proxy_www_gravatar_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - www.gravatar.com
      public:
    environment:
      TARGET: www.gravatar.com
      PRE_RESOLVE: 1

networks:
  default:
    driver: bridge
    name: horizon-acc
    internal: true
  public:
    external:
      name: web

volumes:
  filestore:
  db:
